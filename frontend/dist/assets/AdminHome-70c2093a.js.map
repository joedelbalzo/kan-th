{"version":3,"file":"AdminHome-70c2093a.js","sources":["../../src/Admin/AdminHome.jsx"],"sourcesContent":["//React Imports\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n\r\n//Component Imports\r\nimport Login from \"../Login\";\r\nimport Nav from \"../Nav\";\r\n\r\n//Store Imports\r\nimport { publishBlogpost, hideBlogpost } from \"../store\";\r\n\r\n//Component Style Imports\r\nimport \"./AdminStyles.css\";\r\n\r\n//Function Imports\r\n// import { readableDate } from \"../functions\";\r\n\r\n//////////////////////////////\r\n//////////////////////////////\r\n\r\n// things that still need to happen here:\r\n\r\n// blog posts don't delete. they stay on AWS, so that admin can download if absolutely needed. maybe the delete function finds a post by its ID and then changes it's name or something?\r\n\r\n// blog posts need a save option. submit vs publish. submit saves, publish makes publishedAt == now and published == true\r\n// // saving needs a time stamp\r\n\r\n// saving the latest to local storage, regardless of hitting the save button? maybe this happens like every 2-3 minutes?\r\n// // but then would this get it's own load button? like you'd have to get back into editing the same way you get back in from a file you save\r\n\r\n// some basic documentation and image-adding help needs to be here.\r\n\r\n// pagination.\r\n\r\n// form fields do not have css that matches the dark mode / light mode. borders and text invisible on black bg\r\n\r\n//////////////////////////////\r\n//////////////////////////////\r\n\r\nconst Admin = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [hidden, setHidden] = useState(0);\r\n  const [archive, setArchive] = useState(0);\r\n\r\n  const auth = useSelector((state) => state.auth);\r\n  const blogposts = useSelector((state) => state.blogposts.allBlogposts);\r\n  const drafts = useSelector((state) => state.blogposts.draftedBlogposts);\r\n\r\n  if (!auth.id) {\r\n    return null;\r\n  }\r\n\r\n  const hidePost = (blogpost) => {\r\n    console.log(\"Hidden\");\r\n    dispatch(hideBlogpost(blogpost));\r\n  };\r\n  const publish = (blogpost) => {\r\n    dispatch(publishBlogpost(blogpost));\r\n  };\r\n\r\n  //needs logic in case there's a distinct error. work on the field validation in the posts, but also work on errors here.\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"admin-header\">\r\n        Hey there, boss. Here's where the magic happens. Below is the list of published posts, drafted posts, and handy little help guide.{\" \"}\r\n      </h3>\r\n\r\n      <div className=\"admin-nav\">\r\n        <Link to=\"/admin/posts\" state={{ post: null, type: \"create\" }}>\r\n          Create New Post\r\n        </Link>\r\n        <br />\r\n        <Link to=\"/admin/posts\" state={{ post: null, type: \"create\" }}>\r\n          Need Help?\r\n        </Link>\r\n      </div>\r\n      <div className=\"admin-grid\">\r\n        <div className=\"admin-grid-published\">\r\n          <h2>Published Posts</h2>\r\n          {blogposts.map((blogpost) => {\r\n            return (\r\n              <div key={blogpost.id} className=\"admin-blogpost\">\r\n                <ul>\r\n                  <li>Title: {blogpost.title}</li>\r\n                  <li>Subtitle: {blogpost.subtitle}</li>\r\n                  <div className=\"admin-blogpost-options\">\r\n                    {hidden === blogpost.id ? (\r\n                      <>\r\n                        <button className=\"admin-confirm\" onClick={() => hidePost(blogpost)}>\r\n                          Confirm Hide\r\n                        </button>\r\n                        <button className=\"admin-cancel\" onClick={() => setHidden(0)}>\r\n                          Cancel Hide\r\n                        </button>\r\n                      </>\r\n                    ) : (\r\n                      <button onClick={() => setHidden(blogpost.id)}>Hide</button>\r\n                    )}\r\n                    <button>\r\n                      <Link to=\"/admin/posts\" state={{ post: blogpost, type: \"edit\" }}>\r\n                        Edit\r\n                      </Link>\r\n                    </button>\r\n                  </div>\r\n                </ul>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"admin-grid-drafted\">\r\n          <h2>Drafted Posts</h2>\r\n          {drafts.map((blogpost) => {\r\n            return (\r\n              <div key={blogpost.id} className=\"admin-blogpost\">\r\n                <ul>\r\n                  <li>Title: {blogpost.title}</li>\r\n                  <li>Subtitle: {blogpost.subtitle}</li>\r\n                  <div className=\"admin-blogpost-options\">\r\n                    {archive ? (\r\n                      <>\r\n                        <button className=\"admin-confirm\" onClick={() => hidePost(blogpost)}>\r\n                          Confirm Archive\r\n                        </button>\r\n                        <button className=\"admin-cancel\" onClick={() => setArchive(0)}>\r\n                          Cancel Archive\r\n                        </button>\r\n                      </>\r\n                    ) : (\r\n                      <button onClick={() => setArchive(blogpost.id)}>Archive</button>\r\n                    )}\r\n                    <button>\r\n                      <Link to=\"/admin/posts\" state={{ post: blogpost, type: \"edit\" }}>\r\n                        Edit\r\n                      </Link>\r\n                    </button>\r\n                    <button onClick={() => publish(blogpost)}>Publish!</button>\r\n                  </div>\r\n                </ul>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"admin-grid-help\">\r\n          <h2>Help</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n"],"names":["Admin","useNavigate","dispatch","useDispatch","hidden","setHidden","useState","archive","setArchive","auth","useSelector","state","blogposts","allBlogposts","drafts","draftedBlogposts","id","hidePost","blogpost","console","log","hideBlogpost","publish","publishBlogpost","jsxs","jsx","Link","post","type","map","title","subtitle","Fragment"],"mappings":"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"}